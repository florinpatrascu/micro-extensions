/**
 * This class is generated by jOOQ
 */
package models.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.1" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Articles extends org.jooq.impl.TableImpl<models.tables.records.ArticlesRecord> {

	private static final long serialVersionUID = 1247924961;

	/**
	 * The singleton instance of <code>PUBLIC.ARTICLES</code>
	 */
	public static final models.tables.Articles ARTICLES = new models.tables.Articles();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<models.tables.records.ArticlesRecord> getRecordType() {
		return models.tables.records.ArticlesRecord.class;
	}

	/**
	 * The column <code>PUBLIC.ARTICLES.ID</code>.
	 */
	public final org.jooq.TableField<models.tables.records.ArticlesRecord, java.lang.Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>PUBLIC.ARTICLES.TITLE</code>.
	 */
	public final org.jooq.TableField<models.tables.records.ArticlesRecord, java.lang.String> TITLE = createField("TITLE", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>PUBLIC.ARTICLES.SUMMARY</code>.
	 */
	public final org.jooq.TableField<models.tables.records.ArticlesRecord, java.lang.String> SUMMARY = createField("SUMMARY", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

	/**
	 * The column <code>PUBLIC.ARTICLES.AUTHOR</code>.
	 */
	public final org.jooq.TableField<models.tables.records.ArticlesRecord, java.lang.String> AUTHOR = createField("AUTHOR", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * Create a <code>PUBLIC.ARTICLES</code> table reference
	 */
	public Articles() {
		this("ARTICLES", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.ARTICLES</code> table reference
	 */
	public Articles(java.lang.String alias) {
		this(alias, models.tables.Articles.ARTICLES);
	}

	private Articles(java.lang.String alias, org.jooq.Table<models.tables.records.ArticlesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Articles(java.lang.String alias, org.jooq.Table<models.tables.records.ArticlesRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, models.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<models.tables.records.ArticlesRecord, java.lang.Integer> getIdentity() {
		return models.Keys.IDENTITY_ARTICLES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<models.tables.records.ArticlesRecord> getPrimaryKey() {
		return models.Keys.CONSTRAINT_E;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<models.tables.records.ArticlesRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<models.tables.records.ArticlesRecord>>asList(models.Keys.CONSTRAINT_E);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public models.tables.Articles as(java.lang.String alias) {
		return new models.tables.Articles(alias, this);
	}

	/**
	 * Rename this table
	 */
	public models.tables.Articles rename(java.lang.String name) {
		return new models.tables.Articles(name, null);
	}
}
